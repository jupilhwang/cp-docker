---
version: '3'
services:
  kafka-01:
    build:
      context: ./kafka
      dockerfile: Dockerfile
    hostname: kafka-01
    container_name: kafka-01
    restart: always
    ports:
      - 8090:8090
      - 9092:9092
      - 19092:19092
      - 8070:8070
    environment:
      # kraft setting
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-01:29092

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://kafka-01:19092,PLAINTEXT://kafka-01:9092,CONTROLLER://kafka-01:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-01:19092,PLAINTEXT://kafka-01:9092
      
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'

      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 2097152
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: 'false'
      KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: 'false'
      KAFKA_PASSWORD_ENCODER_SECRET: 'encoder-secret'
   
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1

      KAFKA_CONFLUENT_LICENSE_TOPIC: _confluent-command

      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      #KAFKA_METRIC_REPORTERS: io.confluent.telemetry.reporter.TelemetryReporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter,io.confluent.telemetry.reporter.TelemetryReporter

      KAFKA_METRICS_SAMPLE_WINDOW_MS: 30000
      KAFKA_METRICS_NUM_SAMPLES: 2

      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-01:19092
      KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous

      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLED: 'false'
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'true'

      KAFKA_CONFLUENT_TELEMETRY_ENABLED: 'true'
      KAFKA_CONFLUENT_TELEMETRY_DEBUG_ENABLED: 'true'

      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_._CONFLUENT_ENABLED: 'false'
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_._LOCAL_ENABLED: 'false'
      # KAFKA_CONFLUENT_TELEMETRY_COLLECTORS: basic,extended
      KAFKA_CONFLUENT_TELEMETRY_METRICS_COLLECTOR_INTERVAL_MS: 30000

      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_HTTP_TYPE: http
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_HTTP_ENABLED: 'true'
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_HTTP_CLIENT_BASE_URL: http://172.31.62.53:4343
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_HTTP_API_KEY: admin
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_HTTP_API_SECRET: admin
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_HTTP_CLIENT_COMPRESSION: 'true'
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_HTTP_EVENTS_ENABLED: 'true'

      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TYPE: kafka
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_ENABLED: 'true'
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_PRODUCER_BOOTSTRAP_SERVERS: kafka-01:19092
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TOPIC_PARTITIONS: 1
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TOPIC_NAME: telemetry

      #KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TOPIC_MAX_MESSAGE_BYTES: 8388608
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_METRICS_INCLUDE: .*kafka.server/.*|.*system/.*
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_METRICS_INCLUDE: .*MaxLag.*|kafka.log:type=Log,name=Size.*|.*name=(ActiveControllerCount|BytesInPerSec|BytesOutPerSec|CaughtUpReplicasCount|FailedFetchRequestsPerSec|FailedProduceRequestsPerSec|InSyncReplicasCount|LeaderCount|LeaderElectionRateAndTimeMs|LocalTimeMs|LogEndOffset|LogStartOffset|NetworkProcessorAvgIdlePercent|NumLogSegments|NumPartitionsInError|OfflinePartitionsCount|ObserverReplicasCount|PartitionCount|RemoteTimeMs|ReplicasCount|RequestHandlerAvgIdlePercent|RequestQueueSize|RequestQueueTimeMs|RequestsPerSec|ResponseQueueSize|ResponseQueueTimeMs|ResponseSendTimeMs|Size|TierSize|TotalFetchRequestsPerSec|TotalLag|TotalProduceRequestsPerSec|TotalSize|TotalTimeMs|UncleanLeaderElectionsPerSec|UnderReplicated|UnderReplicatedPartitions|UnderMinIsrPartitionCount|ZooKeeperDisconnectsPerSec|ZooKeeperExpiresPerSec|TieredPartitionsUndergoingUncleanLeaderRecoveryCount|NonTieredPartitionsUndergoingUncleanLeaderRecoveryCount|TierTopicPartitionsUndergoingUncleanLeaderRecoveryCount|ContiguousUnhealthySamples|ContiguousSamplesEngineThreadGroupsStuck|ContiguousSamplesStorageThreadGroupsStuck|ContiguousSamplesNoStorageThreadMakingProgress).*|.*(BytesFetchedRate).*

      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_METRICS_INCLUDE: (io.confluent.kafka.server/broker_load/broker_load_percent|io.confluent.kafka.server/broker_topic/bytes_in/rate/1_min|io.confluent.kafka.server/broker_topic/bytes_out/rate/1_min|io.confluent.kafka.server/broker_topic/messages_in/rate/1_min|io.confluent.kafka.server/broker_topic/replication_bytes_in/rate/1_min|io.confluent.kafka.server/broker_topic/replication_bytes_out/rate/1_min|io.confluent.kafka.server/broker_topic/total_fetch_requests/rate/1_min|io.confluent.kafka.server/broker_topic/total_follower_fetch_requests/rate/1_min|io.confluent.kafka.server/broker_topic/total_produce_requests/rate/1_min|io.confluent.kafka.server/log/size|io.confluent.kafka.server/log_flush/log_flush_rate_and_time_ms|io.confluent.kafka.server/log_flush/log_flush_rate_and_time_ms/rate/1_min|io.confluent.kafka.server/request/local_time_ms|io.confluent.kafka.server/request/request_queue_time_ms|io.confluent.kafka.server/request/requests/rate/1_min|io.confluent.kafka.server/request/total_time_ms|io.confluent.kafka.server/request_channel/request_queue_size|io.confluent.kafka.server/request_channel/response_queue_size|io.confluent.kafka.server/request_handler_pool/request_handler_avg_idle_percent/rate/1_min|io.confluent.kafka.server/server/linux_system_cpu_utilization|io.confluent.system/volume/disk_total_bytes|io.confluent.system/jvm/mem)

      #	metrics.include = (io.confluent.kafka.server/broker_load/broker_load_percent|io.confluent.kafka.server/broker_topic/bytes_in/rate/1_min|io.confluent.kafka.server/broker_topic/bytes_out/rate/1_min|io.confluent.kafka.server/broker_topic/messages_in/rate/1_min|io.confluent.kafka.server/broker_topic/replication_bytes_in/rate/1_min|io.confluent.kafka.server/broker_topic/replication_bytes_out/rate/1_min|io.confluent.kafka.server/broker_topic/total_fetch_requests/rate/1_min|io.confluent.kafka.server/broker_topic/total_follower_fetch_requests/rate/1_min|io.confluent.kafka.server/broker_topic/total_produce_requests/rate/1_min|io.confluent.kafka.server/log/size|io.confluent.kafka.server/log_flush/log_flush_rate_and_time_ms|io.confluent.kafka.server/log_flush/log_flush_rate_and_time_ms/rate/1_min|io.confluent.kafka.server/request/local_time_ms|io.confluent.kafka.server/request/request_queue_time_ms|io.confluent.kafka.server/request/requests/rate/1_min|io.confluent.kafka.server/request/total_time_ms|io.confluent.kafka.server/request_channel/request_queue_size|io.confluent.kafka.server/request_channel/response_queue_size|io.confluent.kafka.server/request_handler_pool/request_handler_avg_idle_percent/rate/1_min|io.confluent.kafka.server/server/linux_system_cpu_utilization|io.confluent.system/volume/disk_total_bytes)

      KAFKA_LOG4J_LOGGERS: org.apache.kafka.image.loader.MetadataLoader=ERROR
      KAFKA_LOG4J_ROOT_LOGLEVEL: INFO

      KAFKA_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      KAFKA_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka-01:19092
      KAFKA_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      KAFKA_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka-01:19092

      # Schema Registry
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081

      # MDS
      # EmbeddedKafkaRest: MDS Client configuration
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8090
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka-01:8090

      # EmbeddedKafkaRest: Kafka Client Configuration
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-01:19092
      KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka-01:8090
      KAFKA_REST_ADVERTISED_LISTENERS: http://kafka-01:8090

      # Self Balancing
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: ANY_UNEVEN_LOAD

      KAFKA_LOG_DIRS: '/etc/confluent/kraft-combined-logs'
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

      # OTEL_RESOURCE_ATTRIBUTES: service.name=kafka-broker,service.version=1.0.0
      # OTEL_EXPORTER_OTLP_COMPRESSION: gzip
      # OTEL_EXPORTER_OTLP_ENDPOINT: http://172.31.62.53:4317
      # OTEL_EXPORTER_OTLP_HEADERS: "uptrace-dsn=http://172.31.62.53:4318/2"
      # OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE: DELTA
      # OTEL_EXPORTER_OTLP_METRICS_DEFAULT_HISTOGRAM_AGGREGATION: BASE2_EXPONENTIAL_BUCKET_HISTOGRAM

      # KAFKA_HEAP_OPTS: "-Xms2g -Xmx2g"
      # EXTRA_ARGS: -javaagent:/etc/confluent/jmx_prometheus_javaagent.jar=8070:/etc/confluent/kafka.yml
      # EXTRA_ARGS: -javaagent:/etc/confluent/otel-javaagent.jar
      # KAFKA_HEAP_OPTS: "-Xms8g -Xmx8g"
      # KAFKA_JMX_PORT: 9999
      # KAFKA_JMX_OPTS: -Djava.rmi.server.hostname=kafka-01 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9999

      KAFKA_JVM_PERFORMANCE_OPTS: -server -XX:MetaspaceSize=96m -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+ExplicitGCInvokesConcurrent -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintFlagsFinal -XX:+UseBiasedLocking -XX:+UseG1GC -XX:G1HeapRegionSize=16 -XX:InitiatingHeapOccupancyPercent=35 -XX:MaxGCPauseMillis=20 -XX:MaxInlineLevel=15 -XX:MaxMetaspaceFreeRatio=80 -XX:MinMetaspaceFreeRatio=50 -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true # -Dotel.instrumentation.kafka.enabled=true -Dotel.resource.attributes=service.name=kafka-broker-01 -Dotel.traces.exporter=otlp -Dotel.exporter.otlp.endpoint=http://10.178.0.3:4317 -Dotel.instrumentation.messaging.experimental.receive-telemetry.enabled=true
    
    # volumes:
    #   - ./update_run.sh:/tmp/update_run.sh
    # command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo .ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?. && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
    volumes:
      - ${PWD}/kafka/logs:/var/log/kafka
    command: 
      - /bin/bash
      - -c
      - |
        echo "Downloading jars"
        # wget -O /etc/confluent/otel-javaagent.jar https://github.com/open-telemetry/opentelemetry-java-instrumentation/releases/latest/download/opentelemetry-javaagent.jar
        wget -O /etc/confluent/jmx_prometheus_javaagent.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.18.0/jmx_prometheus_javaagent-0.18.0.jar
        wget -O /etc/confluent/kafka.yml https://raw.githubusercontent.com/confluentinc/jmx-monitoring-stacks/7.3-post/shared-assets/jmx-exporter/kafka_broker.yml
        #
        echo "Launching kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

  schema-registry:
    image: confluentinc/cp-schema-registry:7.4.1
    hostname: schema-registry
    container_name: schema-registry
    restart: always
    depends_on:
      - kafka-01
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-01:19092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-connect:
    image: confluentinc/cp-server-connect:7.4.1
    hostname: kafka-connect
    container_name: kafka-connect
    restart: always
    depends_on:
      - kafka-01
      - schema-registry
    ports:
      - 8083:8083
      - 8077:8077
      - 7077:7077
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka-01:19092
      CONNECT_REST_PORT: 8083
      # CONNECT_REST_HOME: 0.0.0.0
      CONNECT_GROUP_ID: kafka-connect
      # CONNECT_PRODUCER_CLIENT_ID: kafka-connect
      CONNECT_LISTENERS: http://0.0.0.0:8083
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect

      CONNECT_CONFLUENT_LICENSE_TOPIC: _confluent-command

      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1

      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081

      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect.runtime.rest=ERROR,org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"

      # Allow overriding configs on the connector level
      CONNECT_CONNECTOR_CLIENT_CONFIG_OVERRIDE_POLICY: All

      CONNECT_TOPIC_CREATION_ENABLE: 'true'
      CONNECT_RETRY_BACKOFF_MS: 500
      CONNECT_REQUEST_TIMEOUT_MS: 20000
      CONNECT_PRODUCER_REQUEST_TIMEOUT_MS: 20000
      CONNECT_PRODUCER_RETRY_BACKOFF_MS: 500
      CONNECT_CONSUMER_REQUEST_TIMEOUT_MS: 20000
      CONNECT_CONSUMER_RETRY_BACKOFF_MS: 500
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 5000

      CONNECT_PRODUCER_ENABLE_IDEMPOTENCE: 'true'
      CONNECT_PRODUCER_COMPRESSION_TYPE: lz4

      # CONNECT_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter,io.confluent.telemetry.reporter.TelemetryReporter
      CONNECT_METRICS_SAMPLE_WINDOW_MS: 30000
      CONNECT_METRICS_NUM_SAMPLES: 2

      CONNECT_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-01:19092
      CONNECT_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONNECT_CONFLUENT_METRICS_ENABLE: 'true'

      CONNECT_CONFLUENT_TELEMETRY_EXPORTER_._CONFLUENT_ENABLED: 'false'
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_._LOCAL_ENABLED: 'true'
      # KAFKA_CONFLUENT_TELEMETRY_COLLECTORS: basic,extended
      CONNECT_CONFLUENT_TELEMETRY_METRICS_COLLECTOR_INTERVAL_MS: 30000
      CONNECT_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TYPE: kafka
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TYPE: http
      CONNECT_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_ENABLED: 'true'
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_CLIENT_BASE_URL: http://172.31.62.53:4318
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_CLIENT_COMPRESSIONL: 'true'
      # KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_EVENTS_ENABLED: 'true'
      CONNECT_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_PRODUCER_BOOTSTRAP_SERVERS: kafka-01:19092
      CONNECT_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TOPIC_PARTITIONS: 1
      CONNECT_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TOPIC_REPLICAS: 1
      CONNECT_CONFLUENT_TELEMETRY_EXPORTER_KAKAO_TOPIC_NAME: telemetry
      # connect rest extention
      # CONNECT_REST_EXTENSION_CLASSES: io.debezium.kcrestextension.DebeziumConnectRestExtension

      # trace records
      # CONNECT_TRACE_RECORDS_ENABLE: 'true'
      # CONNECT_TRACE_RECORDS_TOPIC: connect-traces # default
      # CONNECT_TRACE_RECORDS_TOPIC_PARTITION: 1  # default
      # CONNECT_TRACE_RECORDS_TOPIC_REPLICATION_FACTOR: 1 # default : 3

      # Interceptor config
      # CLASSPATH: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib/mysql-connector-java-8.0.28.jar:/usr/share/java/opentracing-kafka-client.jar:/usr/share/java/opentracing-api.jar:/usr/share/java/opentracing-util.jar:/usr/share/java/opentracing-noop.jar
      CLASSPATH: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib/mysql-connector-java-8.0.28.jar:/etc/kafka-connect/jars/brave-kafka-interceptor.jar:/etc/kafka-connect/jars/debezium-connect-rest-extension/debezium-connect-rest-extension-2.3.0.Final.jar
      # CLASSPATH: /usr/share/confluent-hub-components/debezium-debezium-connector-mysql/lib/mysql-connector-java-8.0.28.jar

      # CONNECT_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor,brave.kafka.interceptor.TracingProducerInterceptor
      CONNECT_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka-01:19092 # default _confluent-monitoring

      CONNECT_PRODUCER_ZIPKIN_SENDER_TYPE: KAFKA
      CONNECT_PRODUCER_ZIPKIN_KAFKA_BOOTSTRAP_SERVERS: kafka-01:19092
      CONNECT_PRODUCER_ZIPKIN_KAFKA_TOPIC: zipkin
      CONNECT_PRODUCER_ZIPKIN_ENCODING: PROTO3
      CONNECT_PRODUCER_ZIPKIN_LOCAL_SERVICE_NAME: connect-source

      # CONNECT_PRODUCER_ZIPKIN_SENDER_TYPE: HTTP
      # CONNECT_PRODUCER_ZIPKIN_HTTP_ENDPOINT: http://172.31.62.53:9411/api/v2/spans
      # CONNECT_PRODUCER_ZIPKIN_LOCAL_SERVICE_NAME: datagen-connect
      
      # CONNECT_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor,brave.kafka.interceptor.TracingConsumerInterceptor
      CONNECT_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka-01:19092

      CONNECT_CONSUMER_ZIPKIN_SENDER_TYPE: KAFKA
      CONNECT_CONSUMER_ZIPKIN_KAFKA_BOOTSTRAP_SERVERS: kafka-01:19092
      CONNECT_CONSUMER_ZIPKIN_KAFKA_TOPIC: zipkin
      CONNECT_CONSUMER_ZIPKIN_ENCODING: PROTO3
      CONNECT_CONSUMER_ZIPKIN_LOCAL_SERVICE_NAME: connect-sink

      # CONNECT_CONSUMER_ZIPKIN_SENDER_TYPE: HTTP
      # CONNECT_CONSUMER_ZIPKIN_HTTP_ENDPOINT: "http://172.31.62.53:9411/api/v2/spans"
      # CONNECT_CONSUMER_ZIPKIN_LOCAL_SERVICE_NAME: datagen-connect

      # CONNECT_REST_EXTENSION_CLASSES: io.confluent.connect.secretregistry.ConnectSecretRegistryExtension
      # CONNECT_REST_SERVLET_INITIALIZOR_CLASSES: io.confluent.common.security.jetty.initializer.InstallBearerOrBasicSecurityHandler

      # CONNECT_CONFIG_PROVIDERS: 'secret'
      # CONNECT_CONFIG_PROVIDERS_SECRET_CLASS: 'io.confluent.connect.secretregistry.rbac.config.provider.InternalSecretConfigProvider'
      # CONNECT_CONFIG_PROVIDERS_SECRET_PARAM_MASTER_ENCRYPTION_KEY: 'password1234'
      # CONNECT_CONFIG_PROVIDERS_SECRET_PARAM_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-01:19092

      CONNECT_CONSUMER_OVERRIDE_MAX_PARTITION_FETCH_BYTES: 10485760
      CONNECT_CONSUMER_OVERRIDE_FETCH_MAX_BYTES: 52428800

      CONNECT_LOG4J_LOGGERS: org.apache.kafka.connect.runtime.tracing=DEBUG
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO

      # EXTRA_ARGS: -javaagent:/etc/confluent/jmx_prometheus_javaagent.jar=8077:/etc/confluent/kafka_connect.yml
      # JMX_PORT: "7077"
      # KAFKA_JMX_OPTS: "-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
      KAFKA_JVM_PERFORMANCE_OPTS: -server -XX:MetaspaceSize=96m -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+ExplicitGCInvokesConcurrent -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintFlagsFinal -XX:+UseBiasedLocking -XX:+UseG1GC -XX:G1HeapRegionSize=16 -XX:InitiatingHeapOccupancyPercent=35 -XX:MaxGCPauseMillis=20 -XX:MaxInlineLevel=15 -XX:MaxMetaspaceFreeRatio=80 -XX:MinMetaspaceFreeRatio=50 -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true

      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars

    volumes:
      - $PWD/data/mysql-connector-java-8.0.27.jar:/usr/share/java/kafka/mysql-connector-java-8.0.27.jar
      - $PWD/data:/data
    command:
      - /bin/bash
      - -c
      - |
        # echo "Download bebezium rest extention"
        # wget -qO- https://repo1.maven.org/maven2/io/debezium/debezium-connect-rest-extension/2.3.0.Final/debezium-connect-rest-extension-2.3.0.Final.tar.gz | tar xzf -C /etc/kafka-connect/jars

        echo "Download Tracing Interceptor"
        wget -O /etc/confluent/tracing-interceptor.jar https://github-registry-files.githubusercontent.com/671770660/47597800-2d0b-11ee-9f2e-ea9b1e9c3899?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIWNJYAX4CSVEH53A%2F20230728%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20230728T062947Z&X-Amz-Expires=300&X-Amz-Signature=09d0e16b5253ff9b5d0e33c18c4e5864d5707e65d738582bb30f287aeda04379&X-Amz-SignedHeaders=host&actor_id=0&key_id=0&repo_id=671770660&response-content-disposition=filename%3Dtracing-interceptor-0.0.1.jar&response-content-type=application%2Foctet-stream

        #
        echo "Download zipkin Interceptor"
        #
        wget -O /etc/kafka-connect/jars/brave-kafka-interceptor.jar https://github.com/openzipkin-contrib/brave-kafka-interceptor/releases/download/0.5.0/brave-kafka-interceptor-0.5.0.jar
        #
        echo "Installing JMX Exporter"
        #
        wget -O /etc/confluent/jmx_prometheus_javaagent.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.18.0/jmx_prometheus_javaagent-0.18.0.jar
        wget -O /etc/confluent/kafka_connect.yml https://raw.githubusercontent.com/confluentinc/jmx-monitoring-stacks/7.3-post/shared-assets/jmx-exporter/kafka_connect.yml
        #
        echo "Installing Connector-plugins"
        confluent-hub install --no-prompt confluentinc/kafka-connect-datagen:latest
        confluent-hub install --no-prompt mdrogalis/voluble:latest
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:latest
        confluent-hub install --no-prompt debezium/debezium-connector-mysql:latest
        confluent-hub install --no-prompt mongodb/kafka-connect-mongodb:latest
        confluent-hub install --no-prompt debezium/debezium-connector-postgresql:latest
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:latest
        confluent-hub install --no-prompt confluentinc/kafka-connect-oracle-cdc:latest
        confluent-hub install --no-prompt confluentinc/connect-transforms:latest
        confluent-hub install --no-prompt jcustenborder/kafka-connect-transform-common:latest
        #
        # echo "{{ \"metric.reporters=io.confluent.telemetry.reporter.TelemetryReporter\" }}" >> /etc/confluent/docker/kafka-connect.properties.template
        echo "Launching kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

  ksqldb:
    image: confluentinc/cp-ksqldb-server:7.4.1
    hostname: ksqldb
    container_name: ksqldb
    restart: always
    ports:
      - 8088:8088
    depends_on:
      - kafka-01
      - schema-registry
      - kafka-connect
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka-01:19092
      KSQL_LISTENERS: http://0.0.0.0:8088
      
      KSQL_KSQL_SERVICE_ID: ksqldb-01
      # KSQL_CUB_KAFKA_TIMEOUT: 300
      KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      KSQL_KSQL_CONNECT_URL: http://kafka-connect:8083
      # -v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v
      # Useful settings for development/laptop use - modify as needed for Prod
      KSQL_KSQL_COMMIT_INTERVAL_MS: 2000
      KSQL_KSQL_SINK_PARTITIONS: 1
      KSQL_KSQL_CACHE_MAX_BYTES_BUFFERING: 0
      KSQL_KSQL_STREAMS_CACHE_MAX_BYTES_BUFFERING: 0
      
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1

      KSQL_KSQL_STREAMS_NUM_STANDBY_REPLICAS: 1
      KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
      KSQL_KSQL_QUERY_PULL_ENABLE_STANDBY_READS: 'true'
      KSQL_KSQL_HEATBEAT_ENABLE: 'true'
      # KSQL_KSQL_LAG_REPORTING_ENABLE: 'true'
      KSQL_KSQL_QUERY_PULL_MAX_ALLOWED_OFFSET_LAG: 10000
      KSQL_KSQL_STREAMS_PROCESSING_GUARANTEE: exactly_once

      KSQL_KSQL_STREAMS_PRODUCER_LINGER_MS: 10
      KSQL_KSQL_STREAMS_PRODUCER_BATCH_SIZE: 500000
      #ksql.streams.consumer.max.poll.records: 100
      KSQL_COMPRESSION_TYPE: 'lz4'
      #KSQL_LOG_STREAMING_ENABLED: 'true'

      # KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: earliest
      # -v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v-v
      # Producer Confluent Monitoring Interceptors for Control Center streams monitoring
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor
      KSQL_PRODUCER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka-01:19092
      KSQL_CONSUMER_CONFLUENT_MONITORING_INTERCEPTOR_BOOTSTRAP_SERVERS: kafka-01:19092
      
      KSQL_JVM_PERFORMANCE_OPTS: -server -XX:MetaspaceSize=96m -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+ExplicitGCInvokesConcurrent -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintFlagsFinal -XX:+UseBiasedLocking -XX:+UseG1GC -XX:G1HeapRegionSize=16 -XX:InitiatingHeapOccupancyPercent=35 -XX:MaxGCPauseMillis=20 -XX:MaxInlineLevel=15 -XX:MaxMetaspaceFreeRatio=80 -XX:MinMetaspaceFreeRatio=50 -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.1
    hostname: control-center
    container_name: control-center
    restart: always
    depends_on:
      - kafka-01
      - schema-registry
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka-01:19092
      CONTROL_CENTER_CONFLUENT_CONTROLCENTER_UI_AUTOUPDATE_ENABLE: 'true'

      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081       # default value : localhost:8081

      CONTROL_CENTER_CONNECT_KAKFA-CONNECT_CLUSTER: kafka-connect:8083
      CONTROL_CENTER_CONNECT_HEALTHCHECK_ENDPOINT: /connectors

      CONTROL_CENTER_KSQL_KSQLDB-01_URL: http://ksqldb:8088
      CONTROL_CENTER_KSQL_KSQLDB-01_ADVERTISED_URL: http://ksqldb:8088

      CONTROL_CENTER_CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 16
      CONTROL_CENTER_CONFLUENT_CONTROLCENTER_STREAMS_NUM_STREAM_THREADS: 16
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 1000000000
      
      CONTROL_CENTER_JVM_PERFORMANCE_OPTS: -server -XX:MetaspaceSize=96m -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+ExplicitGCInvokesConcurrent -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintFlagsFinal -XX:+UseBiasedLocking -XX:+UseG1GC -XX:G1HeapRegionSize=16 -XX:InitiatingHeapOccupancyPercent=35 -XX:MaxGCPauseMillis=20 -XX:MaxInlineLevel=15 -XX:MaxMetaspaceFreeRatio=80 -XX:MinMetaspaceFreeRatio=50 -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true

      # CONTROL_CENTER_CONFLUENT_CONTROLCENTER_MODE_ENABLE: 'management'
      CONFLUENT_CONTROLCENTER_MODE_ENABLE: 'management'
      CONFLUENT_CONTROLCENTER_UI_AUTOUPDATE_ENABLE: 'false'

    # command:
    #   - bash
    #   - -c 
    #   - |
    #     echo "Waiting a minute for Kafka brokers to start and necessary topics to be available"
    #     sleep 15
    #     /etc/confluent/docker/run
      

networks:
  default:
    name: confluent
