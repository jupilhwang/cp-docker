---
version: '3'
services:
  kafka-01:
    image: confluentinc/cp-server
    hostname: kafka-01
    container_name: kafka-01
    restart: always
    ports:
      - 8091:8091
      - 9091:9091
      - 19091:19091
      - 9999:9999
      - 8070:8070
    environment:
      # kraft setting
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-01:29091

      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://kafka-01:19091,PLAINTEXT://kafka-01:9091,CONTROLLER://kafka-01:29091
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-01:19091,PLAINTEXT://kafka-01:9091

      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'

      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_MESSAGE_MAX_BYTES: 2097164
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: 'false'
      #KAFKA_CONFLUENT_CLUSTER_LINK_ENABLE: 'false'
      #KAFKA_PASSWORD_ENCODER_SECRET: 'encoder-secret'
   
      KAFKA_DEFAULT_REPLICATION_FACTOR: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_SECURITY_EVENT_LOGGER_EXPORTER_KAFKA_TOPIC_REPLICAS: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_CLUSTER_LINK_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1

      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter,io.confluent.telemetry.reporter.TelemetryReporter
      #KAFKA_METRIC_REPORTERS: io.confluent.telemetry.reporter.TelemetryReporter
      
      KAFKA_CONFLUENT_REPORTERS_TELEMETRY_AUTO_ENABLE: 'false'

      KAFKA_CONFLUENT_TELEMETRY_ENABLED: 'true'
      #KAFKA_CONFLUENT_TELEMETRY_EXPORTER_\__CONFLUENT_ENABLED: 'true'
      #KAFKA_CONFLUENT_TELEMETRY_EXPORTER_\__LOCAL_ENABLED: 'true'
      # KAFKA_CONFLUENT_TELEMETRY_COLLECTORS: basic,extended
      KAFKA_CONFLUENT_TELEMETRY_METRICS_COLLECTOR_INTERVAL_MS: 30000
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAFKA_TYPE: kafka
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAFKA_ENABLED: 'true'
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAFKA_PRODUCER_BOOTSTRAP_SERVERS: kafka-01:19091
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAFKA_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAFKA_TOPIC_NAME: telemetry
      KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAFKA_TOPIC_MAX_MESSAGE_BYTES: 8388608
      #KAFKA_CONFLUENT_TELEMETRY_EXPORTER_KAFKA_METRICS_INCLUDE: io.confluent.kafka.server/*

      KAFKA_CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka-01:19091
      KAFKA_CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      KAFKA_CONFLUENT_METRICS_ENABLE: 'true'
      KAFKA_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous

      KAFKA_METRICS_SAMPLE_WINDOW_MS: 10000
      KAFKA_METRICS_NUM_SAMPLES: 2

      KAFKA_LOG4J_LOGGERS: io.confluent.metrics=DEBUG,io.confluent.telemetry=DEBUG
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN

      # Schema Registry
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081

      # MDS
      KAFKA_CONFLUENT_METADATA_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_METADATA_SERVER_LISTENERS: http://0.0.0.0:8091
      KAFKA_CONFLUENT_METADATA_SERVER_ADVERTISED_LISTENERS: http://kafka-01:8091

      # EmbeddedKafkaRest: Kafka Client Configuration
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka-01:19091

      # EmbeddedKafkaRest: MDS Client configuration
      KAFKA_REST_CONFLUENT_METADATA_BOOTSTRAP_SERVER_URLS: http://kafka-01:8091

      KAFKA_REST_ADVERTISED_LISTENERS: http://kafka-01:8091

      # Self Balancing
      KAFKA_CONFLUENT_BALANCER_ENABLE: 'true'
      KAFKA_CONFLUENT_BALANCER_HEAL_UNEVEN_LOAD_TRIGGER: ANY_UNEVEN_LOAD

      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: MkU3OEVBNTcwNTJENDM2Qk

      # KAFKA_HEAP_OPTS: "-Xms2g -Xmx2g"
      #EXTRA_ARGS: -javaagent:/etc/confluent/jmx_prometheus_javaagent.jar=8070:/etc/confluent/kafka.yml
      # KAFKA_HEAP_OPTS: "-Xms8g -Xmx8g"
      KAFKA_JMX_PORT: 9999
      # KAFKA_JMX_OPTS: -Djava.rmi.server.hostname=kafka-01 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false  -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9999
      KAFKA_JVM_PERFORMANCE_OPTS: -server -XX:MetaspaceSize=96m -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+ExplicitGCInvokesConcurrent -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintFlagsFinal -XX:+UseBiasedLocking -XX:+UseG1GC -XX:G1HeapRegionSize=16 -XX:InitiatingHeapOccupancyPercent=35 -XX:MaxGCPauseMillis=20 -XX:MaxInlineLevel=15 -XX:MaxMetaspaceFreeRatio=80 -XX:MinMetaspaceFreeRatio=50 -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true
    
    # volumes:
    #   - ./update_run.sh:/tmp/update_run.sh
    # command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the update_run.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
    command: 
      - /bin/bash
      - -c
      - |
        wget -O /etc/confluent/jmx_prometheus_javaagent.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.18.0/jmx_prometheus_javaagent-0.18.0.jar
        wget -O /etc/confluent/kafka.yml https://raw.githubusercontent.com/confluentinc/jmx-monitoring-stacks/7.2-post/shared-assets/jmx-exporter/kafka_broker_p99only.yml
        echo "Launching kafka Connect worker"
        /etc/confluent/docker/run &
        #
        sleep infinity

  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    container_name: schema-registry
    restart: always
    depends_on:
      - kafka-01
    ports:
      - 8081:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka-01:19091
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  control-center:
    image: confluentinc/cp-enterprise-control-center
    hostname: control-center
    container_name: control-center
    restart: always
    depends_on:
      - kafka-01
      - schema-registry
    ports:
      - 9021:9021
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka-01:19091


      CONTROL_CENTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      

     
      # CONTROL_CENTER_CONFLUENT_CONTROLCENTER_UI_AUTOUPDATE_ENABLE: 'false'
      
      CONTROL_CENTER_CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 0
      CONTROL_CENTER_CONFLUENT_CONTROLCENTER_STREAMS_NUM_STREAM_THREADS: 10
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1

      CONTROL_CENTER_JVM_PERFORMANCE_OPTS: -server -XX:MetaspaceSize=96m -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:+ExplicitGCInvokesConcurrent -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintFlagsFinal -XX:+UseBiasedLocking -XX:+UseG1GC -XX:G1HeapRegionSize=16 -XX:InitiatingHeapOccupancyPercent=35 -XX:MaxGCPauseMillis=20 -XX:MaxInlineLevel=15 -XX:MaxMetaspaceFreeRatio=80 -XX:MinMetaspaceFreeRatio=50 -Djava.awt.headless=true -Djava.net.preferIPv4Stack=true

      # CONTROL_CENTER_CONFLUENT_CONTROLCENTER_MODE_ENABLE: 'management'
      CONFLUENT_CONTROLCENTER_MODE_ENABLE: 'management'
      CONFLUENT_CONTROLCENTER_UI_AUTOUPDATE_ENABLE: 'false'

    # command:
    #   - bash
    #   - -c 
    #   - |
    #     echo "Waiting a minute for Kafka brokers to start and necessary topics to be available"
    #     sleep 15
    #     /etc/confluent/docker/run

networks:
  default:
    name: confluent
